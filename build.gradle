/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id "application"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    jcenter()
}

dependencies {
    implementation 'org.jetbrains:annotations:20.1.0'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.0.1-jre'
    
    // https://mvnrepository.com/artifact/org.json/json
	implementation group: 'org.json', name: 'json', version: '20220320'
	
	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    // Ascii table
    implementation 'de.vandermeer:asciitable:0.3.2'
}

ext {
    javaMainClass = "runner.DoTest"
}

application {
    mainClassName = javaMainClass
}
